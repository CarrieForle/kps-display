[general]
; How long will KPS update in millisecond.
; It's advised to not set it below 50.
update_interval=77

; The keys that will count toward KPS update 
; separated by a space.
; If it is empty, every key is applied.
monitored_keys=

; The dimension of main window on startup in pixel.
window_width=
window_height=

; The margin of main window in respective dirctions.
top_margin=
right_margin=
bottom_margin=
left_margin=

[KPS]
; The color of KPS in hex, optionally prefixed by '#'.
bg_color="#000000"

; The color of KPS in hex, optionally prefixed by '#'.
fg_color="#ffffff"

; Specification of KPS font and style
; separated by comma and optional space
; Apllicable styles: bold, italic, strike, underline, normal
; A number prefixed by 'w' is font weight, e.g., "w400". 
; A number prefixed by 's' is font size, e.g., "s12". 
; If weight is specified, Bold style is ignored.
; w700 is equivalent to bold; w400 is equivalent to normal
; Unrecoginized styles will be treated as font typeface (i.e., font name)
; The order does not matter, but if you for example, pass multiple font typefaces, the last one will be used.
style="Consolas, w300, italic, bold, s72"

; The alignment of kps.
; This value is one of "left", "center", "right".
align="right"

; The text representation (format) of KPS.
; See the help in the program for more details.
format="%s"

; Map certain KPS-es to certain texts.
; Customize a particular KPS value with the format:
; {KPS_decimal}={text}
; The order doesn't matter.
; Note {text} is taken literally, and empty {text} is valid.
[custom_KPS]
; Example:
; 0="ZERO"
; 1="ONE"
; 2="TOO"
; 10="X"
; 69="Nice" ; If you can somehow reach 69 KPS..., sure.
0="ZERO"
1="ONE"
2="TOO"
10="X"
69="Nice" 
20=Negative